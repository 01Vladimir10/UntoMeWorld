@using Resources
@using UntoMeWorld.WasmClient.Client.Main
@inject NavigationManager _manager 

<div class="navigation-menu @(_isExpanded ? "expanded" : "")">

    <button class="navigation-menu__toggle" @onclick="ToggleMenu">
        <span class="navigation-menu__toggle-icon"></span>
    </button>

    <div class="navigation-menu__items-container">

        <NavLink ActiveClass="active" Match="NavLinkMatch.Prefix" href="@PageRoutes.ChildrenRoute" class="navigation-menu-item">
            <i class="navigation-menu-item__icon ph-users-three">
            </i>
            <h6 class="navigation-menu-item__title">
                @PageRoutes.Routes[PageRoutes.ChildrenRoute]
            </h6>
        </NavLink>
        <NavLink ActiveClass="active" Match="NavLinkMatch.Prefix" href="@PageRoutes.ChurchesRoute" class="navigation-menu-item">
            <i class="navigation-menu-item__icon ph-house-line">
            </i>
            <h6 class="navigation-menu-item__title">
                @PageRoutes.Routes[PageRoutes.ChurchesRoute]
            </h6>
        </NavLink>
        <NavLink ActiveClass="active" Match="NavLinkMatch.Prefix" href="@PageRoutes.ReportsRoute" class="navigation-menu-item">
            <i class="navigation-menu-item__icon ph-chart-pie-slice">
            </i>
            <h6 class="navigation-menu-item__title">
                @PageRoutes.Routes[PageRoutes.ReportsRoute]
            </h6>
        </NavLink>
        <NavLink ActiveClass="active" Match="NavLinkMatch.Prefix" href="@PageRoutes.SettingsRoute" class="navigation-menu-item">
            <i class="navigation-menu-item__icon ph-gear-six">
            </i>
            <h6 class="navigation-menu-item__title">
                @PageRoutes.Routes[PageRoutes.SettingsRoute]
            </h6>
        </NavLink>
    </div>
</div>
<div class="navigation-menu-overlay @(_isExpanded ? "visible" : "")">
    
</div>
@code {

    private bool _isExpanded = false;

    private void ToggleMenu()
    {
        _isExpanded = !_isExpanded;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        
        _manager.LocationChanged += (_, _) =>
        {
            _isExpanded = false;
            StateHasChanged();
        };
    }

}