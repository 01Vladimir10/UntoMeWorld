@using UntoMeWorld.Domain.Model
@using UntoMeWorld.WasmClient.Client.Components.UI.Models
@using UntoMeWorld.WasmClient.Client.ViewModels

<Dialog @ref="_dialog">
    
    <Content>
        <div class="churches-dialog__form-container">
            @if (!_isNew)
            {
                <InputControl TValue="string" Value="@_church.Id" Label="Church Id" IsEnabled="false">
                </InputControl>
            }
            
            <InputControl TValue="string" @bind-Value="@_church.Name" Label="Name" IsEnabled="_isEditing">
            </InputControl>
            
            <SelectControl 
                Label="Pastor"
                TValue="string" @bind-Value="@_church.PastorId" IsEnabled="_isEditing" Options="@PastorOptions()">
            </SelectControl>

        </div>

        <br>
        <br>
        <div class="churches-dialog__buttons-container">
            @if (!_isNew)
            {
                <button class="button" @onclick="StartEditing">
                    Edit
                </button>
            }
            @if (_isNew || _isEditing)
            {
                <button class="button primary" @onclick="Save">
                    Save
                </button>
            }
            @if (!_isNew)
            {
                <button class="button delete" @onclick="Delete">
                    Delete
                </button>
            }
        </div>
    </Content>
</Dialog>



@code {

    [CascadingParameter]
    public ChurchesViewModel ViewModel { get; set; }
    private Church _church = new() { Name = "" };
    private bool _isNew = true;
    private bool _isEditing;
    private Dialog _dialog;
    
    public void Hide()
    {
        _dialog?.Hide();
    }
    
    public void Show(Church church)
    {
        _isNew = false;
        _isEditing = false;
        _church = church;
        _dialog.Title = "Edit Church";
        _dialog?.Show();
        StateHasChanged();
    }

    public void NewChurch()
    {
        _church = new Church();
        _isNew = true;
        _isEditing = true;
        _dialog.Title = "New Church";
        _dialog?.Show();
    }

    private void StartEditing()
    {
        _isEditing = true;
    }

    private async Task Save()
    {
        if (ViewModel != null)
        {
            if (_isNew)
                await ViewModel.Add(_church);
            else
                await ViewModel.Update(_church);   
        }
        _dialog?.Hide();
    }

    private async Task Delete()
    {
        await ViewModel.Delete(_church);
        _dialog.Hide();
    }

    
    private IEnumerable<SelectOption<string>> PastorOptions()
    {
        var options = ViewModel.Pastors.Select(p => new SelectOption<string>
        {
            DisplayValue = p.Name,
            Value = p.Id,
            Selected = _isEditing && p.Id == _church.Id
        }).ToList();
        if (string.IsNullOrEmpty(_church.PastorId) || _isNew)
            options.Add(new SelectOption<string>{ Value = null, Selected = true, DisplayValue = "Select a pastor"});
        return options;
    }

}